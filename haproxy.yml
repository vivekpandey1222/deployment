---
- name: Deploy HAProxy with HAProxy-Exporter
  hosts: my_servers
  vars:
    haproxy_image: "docker.io/haproxytech/haproxy-alpine"
    container_name: "haproxy"
    ports:
      - "8073:80"
      - "8406:8404"
    haproxy_cfg_content: |
      global
          log stdout format raw local0
      defaults
          log global
          mode http
          option httplog
          option dontlognull
          retries 3
          timeout connect 5s
          timeout client  50s
          timeout server  50s
      frontend http_front
          bind *:80
          default_backend http_back
      backend http_back
          balance roundrobin
          server tomcat1 192.168.122.1:8075 check
          server tomcat2 192.168.122.1:8077 check
      frontend stats
         bind *:8404
         stats enable
         stats uri /stats
         stats refresh 10s
    haproxy_dest: "/tmp/haproxy.cfg"
    haproxy_status_filter: "name=haproxy"
    haproxy_base_file: "/tmp/haproxy.cfg"
    haproxy_container_path: "/etc/haproxy/haproxy.cfg"
    
  tasks:
    - name: "Pull the HAProxy image"
      containers.podman.podman_image:
        name: "{{ haproxy_image }}"
        tag: "latest"
      tags: pull_image

    - name: Create haproxy.cfg file 
      copy:
        content: "{{ haproxy_cfg_content }}"
        dest: "{{ haproxy_dest }}"
        mode: '0755'
      tags: create_config

    - name: "Run the haproxy container"
      containers.podman.podman_container:
        name: "{{ container_name }}"
        image: "{{ haproxy_image }}"
        state: started
        ports: "{{ ports }}"
        volumes:
          - "{{ haproxy_base_file }}:{{ haproxy_container_path }}"
      tags: run_container

    - name: Verify HAProxy container is running
      command: podman ps --filter "{{ haproxy_status_filter }}" --format "{{'{{.Status}}'}}"
      register: container_status
      tags: verify_container

    - name: Debug container status
      debug:
        var: container_status.stdout
      tags: debug

    - name: Print HAProxy container logs for debugging
      command: podman logs {{ container_name }}
      register: haproxy_logs
      ignore_errors: yes
      tags: debug

    - name: Debug HAProxy logs
      debug:
        var: haproxy_logs.stdout
      tags: debug

    - name: Verify HAProxy frontend is accessible
      command: curl -I http://localhost:8073
      register: haproxy_frontend
      ignore_errors: yes
      tags: verify_frontend

    - name: Debug HAProxy frontend access
      debug:
        var: haproxy_frontend.stdout
      tags: debug

    - name: Verify HAProxy stats page is accessible
      command: curl -I http://localhost:8406/stats
      register: haproxy_stats
      ignore_errors: yes
      tags: verify_stats

    - name: Debug HAProxy stats access
      debug:
        var: haproxy_stats.stdout
      tags: debug
